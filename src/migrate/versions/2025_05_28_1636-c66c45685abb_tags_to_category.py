"""tags_to_category

Revision ID: c66c45685abb
Revises: 47ba3cdb7085
Create Date: 2025-05-28 16:36:06.204645

"""

# isort: skip_file
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "c66c45685abb"
down_revision: Union[str, None] = "47ba3cdb7085"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "categories",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", name="uq_categories_name"),
    )
    op.create_table(
        "entries_categories",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("entry_id", sa.Integer(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("entries_categories", schema=None) as batch_op:
        batch_op.create_index(
            "idx_entries_categories_category_id", ["category_id"], unique=False
        )
        batch_op.create_index(
            "idx_entries_categories_entry_id", ["entry_id"], unique=False
        )

    op.create_table(
        "entry_scores",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("entry_id", sa.Integer(), nullable=False),
        sa.Column("quality_score", sa.Integer(), nullable=False),
        sa.Column("relevance_score", sa.Integer(), nullable=False),
        sa.Column("final_score", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("entry_scores", schema=None) as batch_op:
        batch_op.create_index(
            "idx_entry_scores_entry_id", ["entry_id"], unique=False
        )
        batch_op.create_index(
            "idx_entry_scores_final_score", ["final_score"], unique=False
        )

    with op.batch_alter_table("entries_tags", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("idx_entries_tags_entry_id"))
        batch_op.drop_index(batch_op.f("idx_entries_tags_tag_id"))

    op.drop_table("entries_tags")
    with op.batch_alter_table("tags", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("idx_tags_level"))
        batch_op.drop_index(batch_op.f("idx_tags_parent_id"))

    op.drop_table("tags")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tags",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("category", sa.VARCHAR(length=255), nullable=False),
        sa.Column("description", sa.VARCHAR(length=255), nullable=False),
        sa.Column("parent_id", sa.INTEGER(), nullable=True),
        sa.Column("level", sa.SMALLINT(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "name", "parent_id", name=op.f("uq_tags_name_parent")
        ),
    )
    with op.batch_alter_table("tags", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("idx_tags_parent_id"), ["parent_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("idx_tags_level"), ["level"], unique=False
        )

    op.create_table(
        "entries_tags",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("entry_id", sa.INTEGER(), nullable=False),
        sa.Column("tag_id", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("entries_tags", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("idx_entries_tags_tag_id"), ["tag_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("idx_entries_tags_entry_id"), ["entry_id"], unique=False
        )

    with op.batch_alter_table("entry_scores", schema=None) as batch_op:
        batch_op.drop_index("idx_entry_scores_final_score")
        batch_op.drop_index("idx_entry_scores_entry_id")

    op.drop_table("entry_scores")
    with op.batch_alter_table("entries_categories", schema=None) as batch_op:
        batch_op.drop_index("idx_entries_categories_entry_id")
        batch_op.drop_index("idx_entries_categories_category_id")

    op.drop_table("entries_categories")
    op.drop_table("categories")
    # ### end Alembic commands ###
