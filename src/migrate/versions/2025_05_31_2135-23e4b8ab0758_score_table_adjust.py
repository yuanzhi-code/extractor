"""score_table_adjust

Revision ID: 23e4b8ab0758
Revises: c66c45685abb
Create Date: 2025-05-31 21:35:16.250950

"""

# isort: skip_file
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "23e4b8ab0758"
down_revision: Union[str, None] = "c66c45685abb"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("categories")
    with op.batch_alter_table("entries_categories", schema=None) as batch_op:
        batch_op.add_column(sa.Column("category", sa.Integer(), nullable=False))
        batch_op.drop_index(batch_op.f("idx_entries_categories_category_id"))
        batch_op.create_index(
            "idx_entries_categories_category", ["category"], unique=False
        )
        batch_op.drop_column("category_id")

    with op.batch_alter_table("entry_scores", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("score", sa.String(length=25), nullable=False)
        )
        batch_op.drop_index(batch_op.f("idx_entry_scores_final_score"))
        batch_op.create_index("idx_entry_scores_score", ["score"], unique=False)
        batch_op.drop_column("final_score")
        batch_op.drop_column("relevance_score")
        batch_op.drop_column("quality_score")

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("entry_scores", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("quality_score", sa.INTEGER(), nullable=False)
        )
        batch_op.add_column(
            sa.Column("relevance_score", sa.INTEGER(), nullable=False)
        )
        batch_op.add_column(
            sa.Column("final_score", sa.INTEGER(), nullable=False)
        )
        batch_op.drop_index("idx_entry_scores_score")
        batch_op.create_index(
            batch_op.f("idx_entry_scores_final_score"),
            ["final_score"],
            unique=False,
        )
        batch_op.drop_column("score")

    with op.batch_alter_table("entries_categories", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("category_id", sa.INTEGER(), nullable=False)
        )
        batch_op.drop_index("idx_entries_categories_category")
        batch_op.create_index(
            batch_op.f("idx_entries_categories_category_id"),
            ["category_id"],
            unique=False,
        )
        batch_op.drop_column("category")

    op.create_table(
        "categories",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("description", sa.VARCHAR(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", name=op.f("uq_categories_name")),
    )
    # ### end Alembic commands ###
